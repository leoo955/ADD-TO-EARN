generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  username  String?
  points    Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  adViews   AdView[]
  auditLogs AuditLog[]
  orders    Order[]
  sessions  Session[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Ad {
  id           String   @id @default(uuid())
  title        String
  videoKey     String
  durationMs   Int
  rewardPoints Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  adViews      AdView[]
}

model AdView {
  id        String   @id @default(uuid())
  userId    String
  adId      String
  token     String   @unique
  watchedMs Int      @default(0)
  rewarded  Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ad        Ad       @relation(fields: [adId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  pricePoints Int
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
}

model Order {
  id          String   @id @default(uuid())
  userId      String
  productId   String
  quantity    Int
  totalPoints Int
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  product     Product  @relation(fields: [productId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model AuditLog {
  id        String   @id @default(uuid())
  userId    String?
  action    String
  meta      Json
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
}
